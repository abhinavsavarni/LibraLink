<%- include('../layout/header') %>
  <style>
    body {
      font-family: "Arial", sans-serif;
      padding: 0;
      background: #f6f8fa;
    }

    .container {
      padding: 20px;
      max-width: 1200px;
      margin: 0 auto;
    }

    .card {
      padding: 2rem 2.5rem;
      margin-bottom: 2rem;
      border-radius: 18px;
      box-shadow: 0 4px 24px rgba(44, 62, 80, 0.08);
      border: none;
      background: #fff;
    }

    .mb-4 {
      margin-bottom: 2rem !important;
    }

    h1.mb-4 {
      font-weight: 700;
      letter-spacing: 1px;
      color: #2c3e50;
      margin-bottom: 2rem;
      margin-left: 20px;
    }

    .form-group label {
      font-weight: 500;
      color: #34495e;
      margin-bottom: 0.5rem;
    }

    .form-control,
    .form-control-file,
    select.form-control {
      border-radius: 10px;
      border: 1px solid #d1d5db;
      box-shadow: none;
      /* margin-bottom: 1rem; */
      padding: 0.75rem 1rem;
      font-size: 1rem;
      background: #f9fafb;
      transition: border-color 0.2s;
    }

    .form-control:focus {
      border-color: #3498db;
      background: #fff;
      box-shadow: 0 0 0 2px #eaf6fb;
    }

    .form-control-file {
      padding: 0.5rem 0;
      background: none;
    }

    .btn1 {
      margin-left: 20px;
    }

    .btn-primary,
    .btn-success {
      border-radius: 8px;
      font-weight: 600;
      padding: 0.6rem 1.5rem;
      font-size: 1rem;
      transition: background 0.2s, transform 0.2s;
      box-shadow: 0 2px 8px rgba(52, 152, 219, 0.08);
    }

    .btn-primary:hover,
    .btn-success:hover {
      background: #217dbb;
      transform: translateY(-2px) scale(1.03);
    }

    .btn-danger {
      border-radius: 8px;
      font-weight: 600;
      padding: 0.5rem 1.2rem;
      font-size: 1rem;
      transition: background 0.2s, transform 0.2s;
    }

    .btn-danger:hover {
      background: #c0392b;
      transform: translateY(-2px) scale(1.03);
    }

    .table {
      margin-top: 2rem;
      border-radius: 14px;
      overflow: hidden;
      box-shadow: 0 2px 12px rgba(44, 62, 80, 0.06);
      background: #fff;
    }

    .table thead {
      background: #3498db;
      color: #fff;
    }

    .table th,
    .table td {
      vertical-align: middle !important;
      padding: 1rem 0.75rem;
      font-size: 1rem;
    }

    .table tbody tr:hover {
      background: #f0f6fa;
      transition: background 0.2s;
    }

    .table img {
      border-radius: 8px;
      box-shadow: 0 2px 8px rgba(44, 62, 80, 0.08);
    }

    .pagination {
      margin-top: 2rem;
    }

    .modal .modal-dialog {
      max-width: 800px;
    }

    .modal .modal-header {
      background-color: #3498db;
      color: white;
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
    }

    .modal .modal-content {
      border-radius: 12px;
      box-shadow: 0 4px 24px rgba(44, 62, 80, 0.12);
    }

    .modal .modal-body {
      padding: 2rem;
    }

    .modal .btn-primary {
      background: #3498db;
      border: none;
    }

    .modal .btn-primary:hover {
      background: #217dbb;
    }

    .read-more {
      color: #3498db;
      font-weight: 500;
      border: none;
      background: none;
      padding: 0;
      margin-left: 0.5rem;
      cursor: pointer;
      transition: color 0.2s;
    }

    .read-more:hover {
      color: #217dbb;
      text-decoration: underline;
    }

    @media (max-width: 768px) {

      .card,
      .modal .modal-body {
        padding: 1rem;
      }

      .table th,
      .table td {
        padding: 0.5rem;
        font-size: 0.95rem;
      }

      .container {
        padding: 0 0.5rem;
      }
    }
  </style>
  <h1 class="mb-4">Admin Dashboard</h1>

  <!-- Button to toggle the add book form -->
  <button id="addBookBtn" class="btn btn1 btn-primary mb-4">Add Book</button>

  <!-- Form to add a new book (initially hidden) -->
  <div id="addBookForm" class="card p-4 mb-4" style="display: none">
    <h2>Add New Book</h2>
    <form action="/admin/addBook" method="POST" enctype="multipart/form-data">
      <div class="form-group">
        <label for="title">Book Name:</label>
        <input type="text" class="form-control" id="title" name="title" required />
      </div>

      <div class="form-group">
        <label for="category">Category:</label>
        <select class="form-control" id="category" name="category" required>
          <option value="Action">Action</option>
          <option value="Kids">Kids</option>
          <option value="Crime">Crime</option>
          <option value="Mystery">Mystery</option>
          <option value="Fantasy">Fantasy</option>
          <option value="Science & Technology">Science & Technology</option>
          <option value="Horror">Horror</option>
          <option value="Thriller">Thriller</option>
          <option value="Romance">Romance</option>
          <option value="Fiction">Fiction</option>
          <option value="Young Adult">Young Adult</option>
          <option value="Education">Education</option>
        </select>
      </div>

      <div class="form-group">
        <label for="author">Author:</label>
        <input type="text" class="form-control" id="author" name="author" required />
      </div>

      <div class="form-group">
        <label for="description">Description:</label>
        <textarea class="form-control" id="description" name="description" required></textarea>
      </div>

      <div class="form-group">
        <label for="image">Image:</label>
        <input type="file" class="form-control-file" id="image" name="image" accept="image/*" required />
      </div>

      <div class="form-group">
        <label for="price">Price:</label>
        <input type="number" class="form-control" id="price" name="price" required />
      </div>

      <div class="form-group">
        <label for="quantity">Quantity:</label>
        <input type="number" class="form-control" id="quantity" name="quantity" required />
      </div>

      <button type="submit" class="btn btn-success">Add Book</button>
    </form>
  </div>

  <!-- Modal for updating a book -->
  <div class="modal fade" id="updateBookModal" tabindex="-1" aria-labelledby="updateBookModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="updateBookModalLabel">Update Book</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form id="updateForm" method="POST" enctype="multipart/form-data">
            <div class="form-group">
              <label for="updateTitle">Book Name:</label>
              <input type="text" class="form-control" id="updateTitle" name="title" required />
            </div>

            <div class="form-group">
              <label for="updateCategory">Category:</label>
              <select class="form-control" id="updateCategory" name="category" required>
                <option value="Action">Action</option>
                <option value="Crime">Crime</option>
                <option value="Mystery">Mystery</option>
                <option value="Fantasy">Fantasy</option>
                <option value="Science & Technology">Science & Technology</option>
                <option value="Horror">Horror</option>
                <option value="Thriller">Thriller</option>
                <option value="Romance">Romance</option>
                <option value="Fiction">Fiction</option>
                <option value="Young Adult">Young Adult</option>
                <option value="Education">Education</option>
              </select>
            </div>

            <div class="form-group">
              <label for="updateAuthor">Author:</label>
              <input type="text" class="form-control" id="updateAuthor" name="author" required />
            </div>

            <div class="form-group">
              <label for="updateDescription">Description:</label>
              <textarea class="form-control" id="updateDescription" name="description" required></textarea>
            </div>

            <div class="form-group">
              <label for="updateImage">Image:</label>
              <input type="file" class="form-control-file" id="updateImage" name="image" accept="image/*" />
            </div>

            <div class="form-group">
              <label for="updatePrice">Price:</label>
              <input type="number" class="form-control" id="updatePrice" name="price" required />
            </div>

            <div class="form-group">
              <label for="updateQuantity">Quantity:</label>
              <input type="number" class="form-control" id="updateQuantity" name="quantity" required />
            </div>

            <button type="submit" class="btn btn-primary">Update Book</button>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- Table to display all books -->
  <table class="table table-bordered table-striped table-hover">
    <thead>
      <tr>
        <th>Image</th>
        <th>Title</th>
        <th>Category</th>
        <th>Author</th>
        <th>Description</th>
        <th>Price</th>
        <th>Quantity</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody id="bookList">
      <% books.slice(0, 100).forEach(book=> { %>
        <tr>
          <td>
            <img src="/img/<%= book.book_img %>" alt="" style="width: 100px; height: 150px" />
          </td>
          <td>
            <%= book.book_name %>
          </td>
          <td>
            <%= book.book_category %>
          </td>
          <td>
            <%= book.book_author %>
          </td>
          <td>
            <span class="short-desc">
              <%= book.book_desc.split(' ').slice(0, 4).join(' ') %></span
        >
        <span class="long-desc" style="display: none"
          ><%= book.book_desc %></span
        >
        <button class="btn btn-link read-more">Read more</button>
      </td>
      <td><%= book.book_price %></td>
      <td><%= book.book_quantity %></td>
      <td>
        <button class="btn btn-info" onclick="editBook(' <%=book.book_id %>')">
                Edit
                </button>
                <button class="btn btn-danger" onclick="deleteBook('<%= book.book_id %>')">
                  Delete
                </button>
          </td>
        </tr>
        <% }); %>
    </tbody>
  </table>

  <!-- <nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        <% for (let i = 0; i < Math.ceil(books.length / 10); i++) { %>
            <li class="page-item <%= i === 0 ? 'active' : '' %>">
                <a class="page-link" href="#" onclick="loadPage('<%= i %>')"><%= i + 1 %></a>
            </li>
        <% } %>
    </ul>
</nav> -->
  <!-- <nav aria-label="...">
    <ul class="pagination">
      <li class="page-item disabled">
        <a class="page-link">Previous</a>
      </li>
      <li class="page-item"><a class="page-link" href="#">1</a></li>
      <li class="page-item active" aria-current="page">
        <a class="page-link" href="#">2</a>
      </li>
      <li class="page-item"><a class="page-link" href="#">3</a></li>
      <li class="page-item">
        <a class="page-link" href="#">Next</a>
      </li>
    </ul>
  </nav> -->
  <%- include('../layout/footer') %>

    <script>
      const books = "<%= JSON.stringify(books) %>";
      document.getElementById("addBookBtn").addEventListener("click", function () {
        var form = document.getElementById("addBookForm");
        form.style.display = form.style.display === "none" ? "block" : "none";
      });

      function editBook(bookId) {
        console.log("In edit book ");
        fetch(`/admin/getBookDetails/${bookId}`)
          .then((response) => response.json())
          .then((book) => {
            // Populate the update form fields with book details
            document.getElementById("updateTitle").value = book.book_name;
            document.getElementById("updateCategory").value = book.book_category;
            document.getElementById("updateAuthor").value = book.book_author;
            document.getElementById("updateDescription").value = book.book_desc;
            document.getElementById("updatePrice").value = book.book_price;
            document.getElementById("updateQuantity").value = book.book_quantity;

            // Set the form action
            var updateForm = document.getElementById("updateForm");
            updateForm.action = `/admin/updateBook/${bookId}`;

            // Show the modal
            $("#updateBookModal").modal("show");
          })
          .catch((error) => console.error("Error fetching book details:", error));
      }

      function deleteBook(bookId) {
        fetch(`/admin/deleteBook/${bookId}`, {
          method: "DELETE",
        })
          .then((response) => {
            if (!response.ok) {
              throw new Error("Failed to delete book");
            }
            console.log("Book deleted successfully");
            location.reload(); // Reload the page to update the book list
          })
          .catch((error) => console.error("Error deleting book:", error));
      }
      //   function loadPage(page) {
      //     const booksPerPage = 100;
      //     const start = page * booksPerPage;
      //     const end = start + booksPerPage;
      //     const paginatedBooks = JSON.parse(books).slice(start, end);

      //     const bookList = document.getElementById("bookList");
      //     bookList.innerHTML = "";

      //     paginatedBooks.forEach((book) => {
      //       const row = `
      //             <tr>
      //                 <td><img src="/img/${
      //                   book.book_img
      //                 }" alt="" style="width: 100px; height: 150px;"></td>
      //                 <td>${book.book_name}</td>
      //                 <td>${book.book_category}</td>
      //                 <td>${book.book_author}</td>
      //                 <td>
      //                     <span class="short-desc">${book.book_desc
      //                       .split(" ")
      //                       .slice(0, 4)
      //                       .join(" ")}</span>
      //                     <span class="long-desc" style="display: none;">${
      //                       book.book_desc
      //                     }</span>
      //                     <button class="btn btn-link read-more">Read more</button>
      //                 </td>
      //                 <td>${book.book_price}</td>
      //                 <td>${book.book_quantity}</td>
      //                 <td>
      //                     <button class="btn btn-info" onclick="editBook('${
      //                       book.book_id
      //                     }')">Edit</button>
      //                     <button class="btn btn-danger" onclick="deleteBook('${
      //                       book.book_id
      //                     }')">Delete</button>
      //                 </td>
      //             </tr>
      //         `;
      //       bookList.innerHTML += row;
      //     });

      //     // Update pagination
      //     updatePagination(page);
      //   }

      //   function updatePagination(currentPage) {
      //     const totalPages = Math.ceil(JSON.parse(books).length / 10);
      //     const pagination = document.querySelector(".pagination");

      //     // Clear existing pagination links
      //     pagination.innerHTML = "";

      //     // Add Previous button
      //     const previousButton = `
      //         <li class="page-item ${currentPage === 0 ? "disabled" : ""}">
      //             <a class="page-link" href="#" onclick="loadPage(${
      //               currentPage - 1
      //             })">Previous</a>
      //         </li>
      //     `;
      //     pagination.innerHTML += previousButton;

      //     // Add page numbers
      //     for (let i = 0; i < totalPages; i++) {
      //       const pageLink = `
      //             <li class="page-item ${currentPage === i ? "active" : ""}">
      //                 <a class="page-link" href="#" onclick="loadPage(${i})">${
      //         i + 1
      //       }</a>
      //             </li>
      //         `;
      //       pagination.innerHTML += pageLink;
      //     }

      //     // Add Next button
      //     const nextButton = `
      //         <li class="page-item ${
      //           currentPage === totalPages - 1 ? "disabled" : ""
      //         }">
      //             <a class="page-link" href="#" onclick="loadPage(${
      //               currentPage + 1
      //             })">Next</a>
      //         </li>
      //     `;
      //     pagination.innerHTML += nextButton;
      //   }

      document.addEventListener("click", function (event) {
        if (event.target.classList.contains("read-more")) {
          const shortDesc =
            event.target.previousElementSibling.previousElementSibling;
          const longDesc = event.target.previousElementSibling;
          if (longDesc.style.display === "none") {
            shortDesc.style.display = "none";
            longDesc.style.display = "block";
            event.target.textContent = "Read less";
          } else {
            shortDesc.style.display = "block";
            longDesc.style.display = "none";
            event.target.textContent = "Read more";
          }
        }
      });

      // Live search functionality
      document.addEventListener('DOMContentLoaded', function () {
        const searchInput = document.querySelector('.search-form input[name="query"]');
        const bookList = document.getElementById('bookList');
        if (searchInput && bookList) {
          let debounceTimeout;
          searchInput.addEventListener('input', function () {
            clearTimeout(debounceTimeout);
            debounceTimeout = setTimeout(() => {
              const query = searchInput.value.trim();
              fetch(`/admin/api/searchBooks?query=${encodeURIComponent(query)}`)
                .then(res => res.json())
                .then(books => {
                  bookList.innerHTML = '';
                  if (books.length === 0) {
                    bookList.innerHTML = '<tr><td colspan="8" class="text-center">No books found.</td></tr>';
                  } else {
                    books.slice(0, 100).forEach(book => {
                      bookList.innerHTML += `
                        <tr>
                          <td><img src="/img/${book.book_img}" alt="" style="width: 100px; height: 150px" /></td>
                          <td>${book.book_name}</td>
                          <td>${book.book_category}</td>
                          <td>${book.book_author}</td>
                          <td>
                            <span class="short-desc">${book.book_desc.split(' ').slice(0, 4).join(' ')}</span>
                            <span class="long-desc" style="display: none">${book.book_desc}</span>
                            <button class="btn btn-link read-more">Read more</button>
                          </td>
                          <td>${book.book_price}</td>
                          <td>${book.book_quantity}</td>
                          <td>
                            <button class="btn btn-info" onclick="editBook('${book.book_id}')">Edit</button>
                            <button class="btn btn-danger" onclick="deleteBook('${book.book_id}')">Delete</button>
                          </td>
                        </tr>
                      `;
                    });
                  }
                  // Re-attach read-more event after updating the table
                  document.querySelectorAll('.read-more').forEach(btn => {
                    btn.onclick = function (event) {
                      const shortDesc = btn.previousElementSibling.previousElementSibling;
                      const longDesc = btn.previousElementSibling;
                      if (longDesc.style.display === "none") {
                        shortDesc.style.display = "none";
                        longDesc.style.display = "block";
                        btn.textContent = "Read less";
                      } else {
                        shortDesc.style.display = "block";
                        longDesc.style.display = "none";
                        btn.textContent = "Read more";
                      }
                    };
                  });
                });
            }, 250);
          });
        }
      });
    </script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>