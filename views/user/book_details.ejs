<%- include('../layout/user_header') %>
  <link rel="stylesheet" href="/css/popular_books.css">
  <style>
    .book-container {
      display: flex;
      justify-content: center;
      align-items: flex-start;
      margin: 2rem auto;
      padding: 2rem;
      background: #ffffff;
      border-radius: 12px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      max-width: 1200px;
    }

    .book-image {
      margin-right: 3rem;
      flex-shrink: 0;
    }

    .book-image img {
      width: 300px;
      height: auto;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
      transition: transform 0.3s ease;
    }

    .book-image img:hover {
      transform: scale(1.02);
    }

    .book-details {
      flex-grow: 1;
      max-width: 600px;
    }

    .book-details h2 {
      color: #2c3e50;
      margin-bottom: 1.5rem;
      font-size: 2rem;
      font-weight: 600;
    }

    .book-details table {
      width: 100%;
      border-collapse: separate;
      border-spacing: 0 0.5rem;
    }

    .book-details td {
      padding: 0.75rem;
      font-size: 1.1rem;
    }

    .book-details td:first-child {
      font-weight: 600;
      color: #34495e;
      width: 140px;
    }

    .book-details td:last-child {
      color: #2c3e50;
    }

    .add-to-cart {
      margin-top: 2rem;
    }

    .add-to-cart button {
      padding: 0.75rem 2rem;
      font-size: 1.1rem;
      font-weight: 500;
      border-radius: 6px;
      transition: all 0.3s ease;
      background-color: #3498db;
      border: none;
      color: white;
    }

    .add-to-cart button:hover {
      background-color: #2980b9;
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .book-actions {
      display: flex;
      gap: 1rem;
      margin-top: 1rem;
    }

    .book-actions button {
      padding: 0.75rem 1.5rem;
      font-size: 1rem;
      font-weight: 500;
      border-radius: 6px;
      transition: all 0.3s ease;
      border: none;
      cursor: pointer;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .read-online {
      background-color: #2ecc71;
      color: white;
    }

    .read-online:hover {
      background-color: #27ae60;
      transform: translateY(-2px);
    }

    .view-on-google {
      background-color: #4285f4;
      color: white;
    }

    .view-on-google:hover {
      background-color: #3367d6;
      transform: translateY(-2px);
    }

    .preview-unavailable {
      background-color: #95a5a6;
      color: white;
      cursor: not-allowed;
    }

    .related-books-section {
      margin-top: 3rem;
      padding: 2rem;
      background: #ffffff;
      border-radius: 12px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .related-books-section h3 {
      color: #2c3e50;
      margin-bottom: 2rem;
      font-size: 1.8rem;
      font-weight: 600;
      text-align: center;
      position: relative;
      padding-bottom: 1rem;
    }

    .related-books-section h3:after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 50%;
      transform: translateX(-50%);
      width: 100px;
      height: 3px;
      background: #3498db;
      border-radius: 2px;
    }

    .card-deck {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 2rem;
      padding: 1rem 0;
    }

    @media (max-width: 1100px) {
      .card-deck {
        grid-template-columns: repeat(2, 1fr);
      }
    }

    @media (max-width: 700px) {
      .card-deck {
        grid-template-columns: 1fr;
      }
    }

    .card {
      width: 260px;
      max-width: 100%;
      min-height: 420px;
      display: flex;
      flex-direction: column;
      align-items: center;
      border: 1px solid #e0e0e0;
      border-radius: 14px;
      background: #fafbfc;
      box-shadow: 0 2px 8px rgba(44, 62, 80, 0.07);
      transition: box-shadow 0.3s, transform 0.3s;
      margin-bottom: 1rem;
      overflow: hidden;
    }

    .card:hover {
      box-shadow: 0 8px 24px rgba(44, 62, 80, 0.13);
      transform: translateY(-4px) scale(1.03);
    }

    .card-img-top {
      width: 100%;
      height: 180px;
      object-fit: cover;
      border-bottom: 1px solid #e0e0e0;
      background: #f4f4f4;
    }

    .card-body {
      flex: 1;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      width: 100%;
      padding: 1.2rem 1rem 1rem 1rem;
    }

    .card-title {
      font-size: 1.1rem;
      font-weight: 700;
      color: #2c3e50;
      margin-bottom: 0.7rem;
      line-height: 1.2;
      min-height: 2.4em;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
      text-overflow: ellipsis;
      word-break: break-word;
      /* Standard properties for compatibility */
      line-clamp: 2;
      display: box;
      box-orient: vertical;
    }

    .card-text {
      color: #34495e;
      margin-bottom: 0.4rem;
      font-size: 0.97rem;
      line-height: 1.4;
      width: 100%;
      white-space: normal;
    }

    .card-text strong {
      color: #2c3e50;
      font-weight: 600;
    }

    .card-actions {
      margin-top: auto;
      width: 100%;
      display: flex;
      gap: 0.5rem;
      justify-content: stretch;
    }

    .card .btn {
      flex: 1;
      padding: 0.6rem 0.5rem;
      font-size: 0.98rem;
      font-weight: 500;
      border-radius: 6px;
      transition: background 0.2s, transform 0.2s;
      text-align: center;
    }

    .card .btn-info {
      background-color: #3498db;
      border: none;
      color: white;
    }

    .card .btn-info:hover {
      background-color: #217dbb;
      transform: translateY(-2px);
    }

    .no-related-books {
      text-align: center;
      color: #7f8c8d;
      font-size: 1.2rem;
      padding: 3rem;
      background: #f8f9fa;
      border-radius: 8px;
      margin: 1rem 0;
    }
  </style>

  <div class="container">
    <div class="book-container">
      <div class="book-image">
        <img src="/img/<%= book.bookDetails.book_img %>" alt="<%= book.bookDetails.book_name %>" />
      </div>
      <div class="book-details">
        <h2>
          <%= book.bookDetails.book_name %>
        </h2>
        <table>
          <tr>
            <td>Book ID</td>
            <td>
              <%= book.bookDetails.book_id %>
            </td>
          </tr>
          <tr>
            <td>Author</td>
            <td>
              <%= book.bookDetails.book_author %>
            </td>
          </tr>
          <tr>
            <td>Category</td>
            <td>
              <%= book.bookDetails.book_category %>
            </td>
          </tr>
          <tr>
            <td>Description</td>
            <td>
              <%= book.bookDetails.book_desc %>
            </td>
          </tr>
          <tr>
            <td>Price</td>
            <td>$<%= book.bookDetails.book_price %>
            </td>
          </tr>
          <tr>
            <td>Quantity</td>
            <td>
              <%= book.bookDetails.book_quantity %>
            </td>
          </tr>
        </table>
        <div class="add-to-cart">
          <button onclick="addToCart('<%= book.bookDetails.book_id %>', '<%= book.bookDetails.book_name %>')">Add to
            Cart</button>
        </div>
        <div class="book-actions">
          <button id="readOnlineBtn" class="read-online" onclick="checkPreviewAvailability('read')">
            <i class="fas fa-book-reader"></i> Read Online
          </button>
          <button id="viewOnGoogleBtn" class="view-on-google" onclick="viewOnGoogleBooks()">
            <i class="fab fa-google"></i> View on Google Books
          </button>
        </div>
      </div>
    </div>

    <section class="related-books-section">
      <h3>Books Related To - <%= book.bookDetails.book_category %>
      </h3>
      <% if (booksInSameCategory && booksInSameCategory.length> 0) { %>
        <div class="card-deck">
          <% booksInSameCategory.forEach(book=> { %>
            <div class="card">
              <img src="/img/<%= book.book_img %>" class="card-img-top" alt="<%= book.book_name %>">
              <div class="card-body">
                <div class="card-title" id="<%= book.book_name %>">
                  <%= book.book_name %>
                </div>
                <div class="card-text"><strong>Author:</strong>
                  <%= book.book_author %>
                </div>
                <div class="card-text"><strong>Category:</strong>
                  <%= book.book_category %>
                </div>
                <div class="card-text"><strong>Price:</strong> $<%= book.book_price %>
                </div>
                <div class="card-text"><strong>Quantity:</strong>
                  <%= book.book_quantity %>
                </div>
                <div class="card-text"><strong>Purchases:</strong>
                  <%= book.book_purchase %>
                </div>
                <div class="card-actions">
                  <button class="btn btn-info" onclick="viewBook('<%= book.book_id %>')">View Details</button>
                  <button class="btn btn-info" onclick="addToCart('<%= book.book_id %>', '<%= book.book_name %>')">Add
                    to Cart</button>
                </div>
              </div>
            </div>
            <% }); %>
        </div>
        <% } else { %>
          <p class="no-related-books">No related books available at the moment.</p>
          <% } %>
    </section>
  </div>

  <script src="/js/index.js"></script>
  <script>
    // Add to wishlist functionality
    document.querySelector('.add-to-wishlist').addEventListener('click', async function () {
      const bookId = this.dataset.bookId;
      try {
        const response = await fetch(`/user/wishlist/add/${bookId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          credentials: 'same-origin'
        });

        const data = await response.json();

        if (response.ok) {
          alert('Book added to wishlist successfully!');
          this.innerHTML = '<i class="fas fa-heart"></i> Added to Wishlist';
          this.disabled = true;
        } else {
          if (response.status === 401) {
            window.location.href = '/user/userLogin';
          } else {
            alert(data.message || 'Error adding book to wishlist');
          }
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Error adding book to wishlist. Please try again.');
      }
    });

    async function checkPreviewAvailability(type) {
      try {
        const readOnlineBtn = document.getElementById('readOnlineBtn');
        const viewOnGoogleBtn = document.getElementById('viewOnGoogleBtn');

        // Disable both buttons while loading
        readOnlineBtn.disabled = true;
        viewOnGoogleBtn.disabled = true;

        // Show loading state only on the clicked button
        if (type === 'read') {
          readOnlineBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Loading...';
        }

        const response = await fetch(`/user/book-preview/<%= book.bookDetails.book_id %>`);
        const data = await response.json();

        // Reset buttons
        readOnlineBtn.disabled = false;
        viewOnGoogleBtn.disabled = false;
        readOnlineBtn.innerHTML = '<i class="fas fa-book-reader"></i> Read Online';

        if (data.isAvailable) {
          if (type === 'read') {
            if (data.previewUrl) {
              window.open(data.previewUrl, '_blank');
            } else if (data.webReaderLink) {
              window.open(data.webReaderLink, '_blank');
            } else {
              // If no preview is available, show book details instead
              showBookDetails(data);
            }
          }
        } else {
          // If no preview is available, show book details instead
          showBookDetails(data);
        }
      } catch (error) {
        console.error('Error checking preview availability:', error);
        alert('Error checking preview availability. Please try again later.');

        // Reset buttons in case of error
        const readOnlineBtn = document.getElementById('readOnlineBtn');
        const viewOnGoogleBtn = document.getElementById('viewOnGoogleBtn');
        readOnlineBtn.disabled = false;
        viewOnGoogleBtn.disabled = false;
        readOnlineBtn.innerHTML = '<i class="fas fa-book-reader"></i> Read Online';
      }
    }

    function showBookDetails(data) {
      // Create modal HTML
      const modalHTML = `
        <div class="modal fade" id="bookDetailsModal" tabindex="-1" aria-labelledby="bookDetailsModalLabel" aria-hidden="true">
          <div class="modal-dialog modal-lg">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="bookDetailsModalLabel">Book Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
                <div class="row">
                  <div class="col-md-4">
                    ${data.thumbnail ? `<img src="${data.thumbnail}" class="img-fluid rounded" alt="Book Cover">` : ''}
                  </div>
                  <div class="col-md-8">
                    <h4>${data.title || '<%= book.bookDetails.book_name %>'}</h4>
                    <p class="text-muted">by ${data.authors ? data.authors.join(', ') : '<%= book.bookDetails.book_author %>'}</p>
                    ${data.averageRating ? `
                      <div class="mb-3">
                        <div class="d-flex align-items-center">
                          <div class="text-warning">
                            ${'★'.repeat(Math.round(data.averageRating))}${'☆'.repeat(5 - Math.round(data.averageRating))}
                          </div>
                          <span class="ms-2">${data.averageRating.toFixed(1)} (${data.ratingsCount} ratings)</span>
                        </div>
                      </div>
                    ` : ''}
                    ${data.description ? `
                      <div class="mb-3">
                        <h6>Description</h6>
                        <p>${data.description}</p>
                      </div>
                    ` : ''}
                    <div class="row">
                      ${data.pageCount ? `
                        <div class="col-6 mb-2">
                          <strong>Pages:</strong> ${data.pageCount}
                        </div>
                      ` : ''}
                      ${data.publishedDate ? `
                        <div class="col-6 mb-2">
                          <strong>Published:</strong> ${data.publishedDate}
                        </div>
                      ` : ''}
                      ${data.publisher ? `
                        <div class="col-6 mb-2">
                          <strong>Publisher:</strong> ${data.publisher}
                        </div>
                      ` : ''}
                    </div>
                  </div>
                </div>
              </div>
              <div class="modal-footer">
                ${data.infoUrl ? `
                  <a href="${data.infoUrl}" target="_blank" class="btn btn-primary">
                    <i class="fab fa-google"></i> View on Google Books
                  </a>
                ` : ''}
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              </div>
            </div>
          </div>
        </div>
      `;

      // Add modal to body
      document.body.insertAdjacentHTML('beforeend', modalHTML);

      // Initialize and show modal
      const modal = new bootstrap.Modal(document.getElementById('bookDetailsModal'));
      modal.show();

      // Remove modal from DOM after it's hidden
      document.getElementById('bookDetailsModal').addEventListener('hidden.bs.modal', function () {
        this.remove();
      });
    }

    async function viewOnGoogleBooks() {
      try {
        const response = await fetch(`/user/book-preview/<%= book.bookDetails.book_id %>`);
        const data = await response.json();
        showBookDetails(data);
      } catch (error) {
        console.error('Error:', error);
        alert('Error fetching book details. Please try again later.');
      }
    }
  </script>
  <%- include('../layout/user_footer') %>